1. def arrayPairSum(nums: list[int]) -> int:
    nums.sort()
    sum = 0
    for i in range(0, len(nums)-1, 2):
        sum += nums[i]
    
    return sum

2. candyType = [1,1,2,2,3,3]

candySet = set(candyType)

print(min(len(candySet), len(candyType)//2))

3. def findLHS(nums: list[int]) -> int:
    n = len(nums)
    import collections
    count = collections.Counter(nums)

    ans = 0

    for x in count:
        if x+1 in count:
            ans = max(ans, count[x] + count[x+1])

    return ans

4. def canPlaceFlowers(flowerbed: list[int], n: int) -> bool:
    count = len(flowerbed)
    if count == 1 and n == 1 and flowerbed[0] == 0:
        n -= 1
    else:
        for i in range(count-1):
            if i == 0:
                if flowerbed[i] == 0 and flowerbed[i+1] == 0:
                    flowerbed[i] = 1
                    n -= 1
            if flowerbed[i] == 0 and flowerbed[i-1] == 0 and flowerbed[i+1] == 0:
                flowerbed[i] = 1
                n -= 1
            if i == count-2:
                if flowerbed[i] == 0 and flowerbed[i+1] == 0:
                    flowerbed[i+1] = 1
                    n -= 1

    if n <= 0:
        return True
    return False

5. def maximumProduct(nums: list[int]) -> int:
    nums.sort()
    return max(nums[0]*nums[1]*nums[-1], nums[-1]*nums[-2]*nums[-3])

6. def search(nums: list[int], target: int) -> int:
    l = 0
    r = len(nums)-1

    while l <= r:
        mid = l + (r-l)//2
        if nums[mid] == target:
            return mid
        elif nums[mid] < target:
            l = mid + 1
        elif nums[mid] > target:
            r = mid - 1
    return -1

7. def isMonotonic(nums: list[int]) -> bool:
    if len(nums) == 0 or len(nums) == 1:
        return True
    else:
        high = max(nums)
        low = min(nums)

        if nums[0] == low and nums[-1] == high:
            for i in range(1, len(nums)):
                if nums[i] < nums[i-1]:
                    return False
            return True
        elif nums[0] == high and nums[-1] == low:
            for i in range(1, len(nums)):
                if nums[i] > nums[i-1]:
                    return False
            return True
        else:
            return False

8. def smallestRangeI(nums: list[int], k: int) -> int:
    highest = max(nums) - k
    smallest = min(nums) + k

    diff = highest - smallest
    if diff <= 0:
        return 0
    else:
        return diff